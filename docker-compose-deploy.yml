version: '2'

services: 
  mysqldb:
    build:
      context: ./kiwi-database
      dockerfile: mysql.dockerfile
    networks:
      - service-network
    environment:
      - MYSQL_ROOT_PASSWORD=12345
    ports:
      - "3306"
    
  mongodb:
    image: mongo
    restart: always
    networks:
      - content-network
      - user-network
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 12345

  entry: 
    build:
      context: ./kiwi-entry
      dockerfile: entry.dockerfile
    ports:
      - "8000:8000"
    networks:
      - user-network
      - service-network
      - content-network
    environment:
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - MONGO_USER=root
      - MONGO_DB=content
      - MONGO_COLLECTION=items
      - MONGO_PWD=12345
      - USER_SERVICE=http://user:80
      - SWITCHER_SERVICE=http://engine:8000
      - CONTENT_SERVICE=http://content:5000/items
      - UNVOTED_THRESHOLD=50
      - SELF=http://entry:8000/content

  content:
    build:
      context: ./kiwi-content-crawler
      dockerfile: content.dockerfile
    ports:
      - "5000"
    networks:
      - content-network
    restart: always
    environment:
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017      
      - MONGO_USER=root
      - MONGO_DB=content
      - MONGO_COLLECTION=items
      - MONGO_PWD=12345
      - IMGUR_CLIENT_ID=<your-key-here>

  user: 
    build: 
      context: ./kiwi-user-manager
      dockerfile: user.dockerfile
    ports:
      - "80"
    networks:
      - user-network
    environment:      
      - KIWI_USER_MANAGER_DB_HOST=mongodb
      - KIWI_USER_MANAGER_DB_DATABASE=users
      - KIWI_USER_MANAGER_DB_USER=root
      - KIWI_USER_MANAGER_DB_PASSWORD=12345
  engine:
    build:
      context: ./kiwi-engine-selector
      dockerfile: engine.dockerfile
    ports: 
      - "8000"
    networks:
      - service-network
    restart: always
    environment:
      - RECOMMENDERS=[
        'svd=http://svd:8000',
        'content=http://content-rec:8000',
        'knn=http://knn:8000',
        'random=http://random:8000'
        ]
    
  content-rec:
    build:
      context: ./kiwi-content
      dockerfile: service.dockerfile
    ports:
      - "8000"
    networks:
      - service-network
    restart: always
    environment:
      - MSQL_USER=content
      - MSQL_PWD=12345
      - MSQL_HOST=mysqldb
      - MSQL_PORT=3306
      - MSQL_DATABASE=content_recommender
      - MIN_RATING=0
      - MAX_RATING=1
      - POS_CUTOFF=0
    volumes:
      - './kiwi-content/kiwi:/var/www/kiwi'

  random:
    build:
      context: ./kiwi-random
      dockerfile: service.dockerfile
    ports:
      - "8000"
    networks:
      - service-network
    restart: always
    environment:
      - MIN_RATING=0
      - MAX_RATING=1
      - MSQL_USER=random
      - MSQL_PWD=12345
      - MSQL_HOST=mysqldb
      - MSQL_PORT=3306
      - MSQL_DATABASE=random_recommender
    volumes:
      - './kiwi-random/kiwi:/var/www/kiwi'

  knn:
    build: 
      context: ./kiwi-surprise
      dockerfile: surprise.dockerfile
    ports:
      - "8000"
    networks:
      - service-network
    restart: always    
    environment:
      - MIN_RATING=0
      - MAX_RATING=1
      - MSQL_USER=knn
      - MSQL_PWD=12345
      - MSQL_HOST=mysqldb
      - MSQL_PORT=3306
      - MSQL_DATABASE=knn_recommender
      - RETRAIN_ON_REQUEST=['/feedback']
      - ALGO_PATH=algorithms/knn_item_msd_zscore.py
    volumes:
      - './kiwi-surprise/kiwi:/kiwi'

  svd:
    build: 
      context: ./kiwi-surprise
      dockerfile: surprise.dockerfile
    ports:
      - "8000"
    networks:
      - service-network
    restart: always    
    environment:
      - MIN_RATING=0
      - MAX_RATING=1
      - MSQL_USER=svd
      - MSQL_PWD=12345
      - MSQL_HOST=mysqldb
      - MSQL_PORT=3306
      - MSQL_DATABASE=svd_recommender
      - RETRAIN_ON_REQUEST=['/feedback']
      - ALGO_PATH=algorithms/svd.py
    volumes:
     - './kiwi-surprise/kiwi:/kiwi'


  # requires a prior build step of the ionic framework
  webapp:
    build:
      context: ./kiwi-mobile-frontend
      dockerfile: webapp.dockerfile
    networks:
      - webapp-network
    ports:
      - "80:80"

networks:
  service-network:
    driver: bridge
  content-network:
    driver: bridge
  user-network:
    driver: bridge
  webapp-network:
    driver: bridge

